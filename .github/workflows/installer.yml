name: fetch_firmwares

on: [push]

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: environment-${{ github.ref }}
  cancel-in-progress: false

jobs:
  empty_branch:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: firmware
    - name: Create new empty firmware branch
      run: |
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        git switch --orphan new_branch                                 # create empty branch
        git commit --allow-empty -m "Initial commit"
        git push -u origin new_branch                                  # push empty branch in repo
        git switch firmware
        git reset --hard new_branch                                    # reset firmware branch
        git push origin firmware -f
        git push origin --delete new_branch                            # delete empty_branch

  download:
    runs-on: ubuntu-latest
    needs: empty_branch
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: firmware
      - name: Merge branch main into branch firmware
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git remote add -f mrg_main "https://github.com/steadramon/ESPGeiger-WebInstaller2" --track main
          git switch -c work
          rm -rf ./github
          git merge mrg_main/main --allow-unrelated-histories &> status.txt
          echo "$(<status.txt)"
      - name: Push into branch firmware
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          branch: 'firmware'
      - uses: actions/checkout@v3
        with:
          ref: firmware
      - uses: robinraju/release-downloader@v1.8
        id: "releaseid"
        with: 
          # The source repository path.
          # Expected format {owner}/{repo}
          # Default: ${{ github.repository }}
          repository: "steadramon/ESPGeiger"
          
          # A flag to set the download target as latest release
          # The default value is 'false'
          latest: true
          
          # The name of the file to download.
          # Use this field only to specify filenames other than tarball or zipball, if any.
          # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
          fileName: "*.bin"
          
          # Download the attached tarball (*.tar.gz)
          tarBall: false
          
          # Download the attached zipball (*.zip)
          zipBall: false
          
          # Relative path under $GITHUB_WORKSPACE to place the downloaded file(s)
          # It will create the target directory automatically if not present
          # eg: out-file-path: "my-downloads" => It will create directory $GITHUB_WORKSPACE/my-downloads
          out-file-path: "downloaded"
      - name: Move firmware files in sub-folders
        run: |
          mv ./downloaded/espgeigerhw-firmware.*bin bin/espgeigerhw/espgeigerhw-firmware.bin
          mv ./downloaded/espgeigerlog-firmware.*bin bin/espgeigerlog/espgeigerlog-firmware.bin
          mv ./downloaded/espgeigerlog_gc10-firmware.*bin bin/espgeigerlog_gc10/espgeigerlog_gc10-firmware.bin
          mv ./downloaded/espgeigerlog_gc10next-firmware.*bin bin/espgeigerlog_gc10next/espgeigerlog_gc10next-firmware.bin
          mv ./downloaded/espgeigerlog_mightyohm-firmware.*bin bin/espgeigerlog_mightyohm/espgeigerlog_mightyohm-firmware.bin
          mv ./downloaded/espgeigerlog_test-firmware.*bin bin/espgeigerlog_test/espgeigerlog_test-firmware.bin
          mv ./downloaded/esp32_cajoe_iotgm-firmware_merged.*bin bin/cajoeiot/esp32_cajoe_iotgm-firmware.bin
          mv ./downloaded/esp32_gc10-firmware_merged.*bin bin/gc10/esp32_gc10-firmware.bin
          mv ./downloaded/esp8266_gc10-firmware.*bin bin/gc10/esp8266_gc10-firmware.bin
          mv ./downloaded/esp32oled_gc10-firmware_merged.*bin bin/gc10/oled/esp32oled_gc10-firmware.bin
          mv ./downloaded/esp8266oled_gc10-firmware.*bin bin/gc10/oled/esp8266oled_gc10-firmware.bin
          mv ./downloaded/esp32_gc10next-firmware_merged.*bin bin/gc10next/esp32_gc10next-firmware.bin
          mv ./downloaded/esp8266_gc10next-firmware.*bin bin/gc10next/esp8266_gc10next-firmware.bin
          mv ./downloaded/esp32oled_gc10next-firmware_merged.*bin bin/gc10next/oled/esp32oled_gc10next-firmware.bin
          mv ./downloaded/esp8266oled_gc10next-firmware.*bin bin/gc10next/oled/esp8266oled_gc10next-firmware.bin
          mv ./downloaded/esp32_mightyohm-firmware_merged.*bin bin/mightyohm/esp32_mightyohm-firmware.bin
          mv ./downloaded/esp8266_mightyohm-firmware.*bin bin/mightyohm/esp8266_mightyohm-firmware.bin
          mv ./downloaded/esp32oled_mightyohm-firmware_merged.*bin bin/mightyohm/oled/esp32oled_mightyohm-firmware.bin
          mv ./downloaded/esp8266oled_mightyohm-firmware.*bin bin/mightyohm/oled/esp8266oled_mightyohm-firmware.bin
          mv ./downloaded/esp32_pulse-firmware_merged.*bin bin/pulse/esp32_pulse-firmware.bin
          mv ./downloaded/esp8266_pulse-firmware.*bin bin/pulse/esp8266_pulse-firmware.bin
          mv ./downloaded/esp32oled_pulse-firmware_merged.*bin bin/pulse/oled/esp32oled_pulse-firmware.bin
          mv ./downloaded/esp8266oled_pulse-firmware.*bin bin/pulse/oled/esp8266oled_pulse-firmware.bin
          mv ./downloaded/esp32_test-firmware_merged.*bin bin/test/esp32_test-firmware.bin
          mv ./downloaded/esp8266_test-firmware.*bin bin/test/esp8266_test-firmware.bin
          mv ./downloaded/esp32oled_test-firmware_merged.*bin bin/test/oled/esp32oled_test-firmware.bin
          mv ./downloaded/esp8266oled_test-firmware.*bin bin/test/oled/esp8266oled_test-firmware.bin
          mv ./downloaded/esp32_testpulse-firmware_merged.*bin bin/test_pulse/esp32_testpulse-firmware.bin
          mv ./downloaded/esp8266_testpulse-firmware.*bin bin/test_pulse/esp8266_testpulse-firmware.bin
          mv ./downloaded/esp32oled_testpulse-firmware_merged.*bin bin/test_pulse/oled/esp32oled_testpulse-firmware.bin
          mv ./downloaded/esp8266oled_testpulse-firmware.*bin bin/test_pulse/oled/esp8266oled_testpulse-firmware.bin
          mv ./downloaded/esp32_pulse_no_pcnt-firmware_merged.*bin bin/pulse_no_pcnt/esp32_pulse_no_pcnt-firmware.bin
          mv ./downloaded/esp32oled_pulse_no_pcnt-firmware_merged.*bin bin/pulse_no_pcnt/oled/esp32oled_pulse_no_pcnt-firmware.bin
          rm -rf ./downloaded
      - name: Set version tag from git
        run: |
          sed -i "s#{version}#${{steps.releaseid.outputs.tag_name}}#" bin/*/manifest.json
          sed -i "s#{version}#${{steps.releaseid.outputs.tag_name}}#" bin/*/*/manifest.json
          sed -i "s#{version}#${{steps.releaseid.outputs.tag_name}}#" index.htm
      - name: Push updated master firmwares in branch firmware
        run: |
          COMMIT="Firmware built from ${{steps.releaseid.outputs.tag_name}}"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git add -A
          git commit --allow-empty -m "$COMMIT"
          git push origin firmware -f
